<!DOCTYPE html>
<html>
<head>
  <base target="_top">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <!-- LIBRERÍAS EXTERNAS (Sin cambios funcionales) -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"/>
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
  <!-- Font Awesome ya no es necesario para el nuevo diseño, pero se puede dejar por si se usa en el futuro -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

  <!-- ========================================================================= -->
  <!-- ========= INICIO DE LA SECCIÓN DE ESTILOS ADAPTADA ====================== -->
  <!-- ========================================================================= -->
  <style>
    /* --- NUEVA PALETA DE COLORES AZUL/GRIS (Tomada del segundo HTML) --- */
    :root {
      --color-bg-dark: #2d3436;          /* Gris muy oscuro para el fondo de la página */
      --color-form-bg: #828282;          /* Gris Medio para el contenedor */
      --color-text-light: #c2c4c5;        /* Gris Claro para el texto principal */
      --color-accent-primary: #4069a0;   /* Azul Corporativo para botones principales */
      --color-accent-secondary: #4f9cc6;  /* Azul Cielo para acentos y subtítulos */
      --color-error-red: #c0392b;          /* Un rojo que combina con la paleta */
    }

    /* --- Estilos Generales y Fondo (Tomados del segundo HTML) --- */
    body {
      font-family: 'Segoe UI', 'Roboto', 'Helvetica Neue', Arial, sans-serif;
      margin: 0;
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      /* FONDO ACTUALIZADO CON LA NUEVA IMAGEN Y UN OVERLAY OSCURO */
      background-image: linear-gradient(rgba(45, 52, 54, 0.8), rgba(45, 52, 54, 0.8)), url('https://i.ibb.co/vvwvSYDs/un-control-de-acceso-de-una-empresa.jpg');
      background-size: cover;
      background-position: center;
      background-attachment: fixed;
      color: var(--color-text-light);
      padding: 20px 0;
    }

    /* --- Contenedor Principal con Animación (Tomado del segundo HTML) --- */
    .container {
      background: var(--color-form-bg);
      padding: 40px;
      border-radius: 15px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.37);
      border: 1px solid rgba(255, 255, 255, 0.1);
      text-align: center;
      width: 90%;
      max-width: 420px;
      transition: all 0.3s ease;
      animation: fadeInScale 0.6s ease-out forwards;
    }
    @keyframes fadeInScale { from { opacity: 0; transform: scale(0.95); } to { opacity: 1; transform: scale(1); } }

    .logo-container { margin-bottom: 1rem; }
    .form-logo { width: 120px; height: auto; border-radius: 8px; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4); }

    h1 { color: var(--color-text-light); font-weight: 300; letter-spacing: 2px; margin-bottom: 10px; }
    p.subtitle { color: var(--color-accent-secondary); font-size: 1.1em; margin-top: 0; margin-bottom: 30px; }
    
    label { display: block; margin-bottom: 8px; font-weight: 500; text-align: left; }
    
    /* Estilos para inputs y select adaptados */
    input[type="text"], select {
      width: 100%;
      padding: 15px;
      margin-bottom: 20px;
      border-radius: 8px;
      border: 1px solid var(--color-form-bg);
      background-color: var(--color-bg-dark);
      color: var(--color-text-light);
      font-size: 16px;
      box-sizing: border-box;
      transition: border-color 0.3s, box-shadow 0.3s;
    }
    input[type="text"]:focus, select:focus {
      outline: none;
      border-color: var(--color-accent-secondary);
      box-shadow: 0 0 15px rgba(79, 156, 198, 0.5);
    }
    
    button {
      width: 100%;
      padding: 15px;
      border: none;
      border-radius: 8px;
      color: #ffffff;
      font-size: 16px;
      font-weight: bold;
      cursor: pointer;
      transition: transform 0.2s ease, box-shadow 0.3s ease, background-color 0.3s ease;
      margin-bottom: 10px;
    }
    button:hover:not(:disabled) { transform: translateY(-3px); box-shadow: 0 6px 20px rgba(0, 0, 0, 0.25); }
    button:disabled { background-color: #555; color: #999; cursor: not-allowed; transform: none; }
    
    #verifyButton, #capture-button { background-color: var(--color-accent-primary); }
    #verifyButton:hover:not(:disabled), #capture-button:hover:not(:disabled) { background-color: #3a5f91; }

    #employeeSection, #sedeSelectionSection, #userInfo, #actionButtons, #feedback-container, #camera-container, #spinner { display: none; }

    #userInfo {
      text-align: left;
      background-color: rgba(45, 52, 54, 0.4);
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 20px;
    }
    #userInfo h2 { margin-top: 0; }
    #userInfo p { margin: 8px 0; }
    #userInfo p strong { color: var(--color-accent-secondary); }

    .action-button.ingreso, .action-button.lunch-out, .action-button.lunch-in { background-color: var(--color-accent-primary); }
    .action-button.salida { background-color: #4a4a4a; color: var(--color-text-light); }

    #feedback-container { display: none; flex-direction: column; align-items: center; padding: 20px; border-radius: 10px; margin-top: 20px; border-left: 5px solid; animation: fadeInScale 0.5s ease-out; }
    #feedback-icon { margin-bottom: 15px; }
    #feedback-title { margin: 0 0 10px 0; font-size: 1.4em; }
    #feedback-message { margin: 0; font-size: 1em; line-height: 1.5; }
    .feedback-success { background-color: rgba(64, 105, 160, 0.15); border-color: var(--color-accent-primary); }
    .feedback-warning { background-color: rgba(79, 156, 198, 0.15); border-color: var(--color-accent-secondary); }
    .feedback-error   { background-color: rgba(192, 57, 43, 0.15); border-color: var(--color-error-red); }
    .feedback-info    { background-color: rgba(64, 105, 160, 0.15); border-color: var(--color-accent-primary); }

    #camera-container { flex-direction: column; align-items: center; margin-top: 20px; gap: 15px; }
    #camera-feed { width: 100%; max-width: 320px; height: auto; border-radius: 8px; border: 2px solid var(--color-accent-secondary); transform: scaleX(-1); }
    
    #map-container { display: none; margin-top: 20px; height: 300px; width: 100%; border-radius: 10px; border: 1px solid var(--color-accent-secondary); }
    #map { height: 100%; width: 100%; border-radius: 10px; }

    /* Estilo para el spinner, adaptado del original */
    #spinner p {
      margin-top: 20px; font-size: 1.1em; color: var(--color-text-light); animation: pulse 1.5s infinite ease-in-out;
    }
    @keyframes pulse { 0%, 100% { opacity: 0.7; } 50% { opacity: 1; } }
    /* ========================================================================= */
    /* ========= FIN DE LA SECCIÓN DE ESTILOS ADAPTADA ========================= */
    /* ========================================================================= */
  </style>
</head>
<body>
  <div class="container">
    <div class="logo-container">
      <!-- Logo actualizado al del segundo HTML -->
      <img src="https://i.ibb.co/v6fV7LS6/images.png" alt="Logo Celufiamos" class="form-logo">
    </div>

    <h1>Control de Ingreso</h1>
    <p class="subtitle">Celufiamos</p>

    <div id="verificationSection">
      <!-- Icono eliminado para un look más limpio -->
      <label for="docId">Número de Documento</label>
      <input type="text" id="docId" placeholder="Ingresa tu documento para empezar">
      <!-- Icono y span eliminados -->
      <button id="verifyButton">Verificar Identidad</button>
      <p style="font-size: 0.8em; opacity: 0.7; margin-top: 15px;">Recuerda marcar tu ingreso/salida en la puerta de la sede.</p>
    </div>
    
    <div id="employeeSection">
      <div id="userInfo">
        <h2 id="welcomeMessage" style="margin-top:0;"></h2>
        <!-- Iconos eliminados -->
        <p><strong>Cargo:</strong> <span id="userCargo"></span></p>
        <p><strong>Sede Asignada:</strong> <span id="userSede"></span></p>
      </div>

      <div id="sedeSelectionSection">
          <!-- Icono eliminado -->
          <label for="sedeSelector">¿En qué sede te encuentras?</label>
          <select id="sedeSelector"></select>
      </div>

      <div id="actionButtons">
        <!-- Iconos y spans eliminados de todos los botones -->
        <button class="action-button ingreso" onclick="handleAction('INGRESO A LABORAR')">Ingreso a Laborar</button>
        <button class="action-button lunch-out" onclick="handleAction('SALIDA A ALMORZAR')">Salida a Almorzar</button>
        <button class="action-button lunch-in" onclick="handleAction('REGRESO DE ALMORZAR')">Regreso de Almorzar</button>
        <button class="action-button salida" onclick="handleAction('SALIDA DE LABORAR')">Salida de Laborar</button>
      </div>
    </div>
    
    <div id="camera-container">
        <video id="camera-feed" autoplay playsinline></video>
        <!-- Icono y span eliminados -->
        <button id="capture-button">Tomar Foto y Registrar</button>
        <canvas id="canvas" style="display:none;"></canvas>
    </div>
    <div id="feedback-container">
        <div id="feedback-icon"></div>
        <h2 id="feedback-title"></h2>
        <p id="feedback-message"></p>
    </div>
    <div id="map-container">
        <div id="map"></div>
    </div>
    <div id="spinner" style="display: none;"><p>Procesando...</p></div>
  </div>

<!-- ========================================================================= -->
<!-- ESTA SECCIÓN DE SCRIPT NO HA SIDO MODIFICADA EN ABSOLUTO -->
<!-- ========================================================================= -->
<script>
    let currentEmployee = null;
    let stream = null;
    let map = null;
    let currentEventType = null;
    
    const video = document.getElementById('camera-feed');
    const canvas = document.getElementById('canvas');
    const captureButton = document.getElementById('capture-button');
    
    const icons = {
        success: '<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" fill="var(--color-accent-primary)" viewBox="0 0 16 16"><path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/></svg>',
        warning: '<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" fill="var(--color-accent-secondary)" viewBox="0 0 16 16"><path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/></svg>',
        error: '<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" fill="var(--color-error-red)" viewBox="0 0 16 16"><path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z"/></svg>',
        info: '<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" fill="var(--color-accent-primary)" viewBox="0 0 16 16"><path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z"/></svg>'
    };
    document.getElementById('verifyButton').addEventListener('click', verifyEmployee);
    captureButton.addEventListener('click', captureAndRegister);
    function showFeedback(type, title, message) {
        const feedbackEl = document.getElementById('feedback-container');
        document.getElementById('feedback-icon').innerHTML = icons[type] || icons.info;
        document.getElementById('feedback-title').textContent = title;
        document.getElementById('feedback-message').textContent = message;
        feedbackEl.className = `feedback-${type}`;
        feedbackEl.style.display = 'flex';
    }
    function hideFeedback() {
        document.getElementById('feedback-container').style.display = 'none';
        if (map) { map.remove(); map = null; }
        document.getElementById('map-container').style.display = 'none';
    }
    function toggleLoading(isLoading, message = 'Procesando...') {
        const spinner = document.getElementById('spinner');
        if(spinner) {
          spinner.querySelector('p').textContent = message;
          spinner.style.display = isLoading ? 'block' : 'none';
        }
        document.getElementById('verifyButton').disabled = isLoading;
        document.querySelectorAll('.action-button, #capture-button').forEach(btn => btn.disabled = isLoading);
    }
    function verifyEmployee() {
        const docId = document.getElementById('docId').value;
        if (!docId) {
            showFeedback('warning', 'Campo Vacío', 'Por favor, ingresa un número de documento.');
            return;
        }
        hideFeedback();
        toggleLoading(true, 'Verificando identidad...');
        google.script.run
            .withSuccessHandler(onVerificationSuccess)
            .withFailureHandler(onFailure)
            .getEmployeeData(docId);
    }
    function onVerificationSuccess(employeeData) {
        toggleLoading(false);
        if (employeeData.error) {
            showFeedback('error', 'Verificación Fallida', employeeData.error);
        } else {
            currentEmployee = {
                docId: employeeData.documento,
                nombre: employeeData.nombre,
                cargo: employeeData.cargo,
                sedeAsignada: employeeData.sedeAsignada
            };
            document.getElementById('welcomeMessage').textContent = '¡Hola, ' + currentEmployee.nombre.split(' ')[0] + '!';
            document.getElementById('userCargo').textContent = currentEmployee.cargo;
            document.getElementById('userSede').textContent = currentEmployee.sedeAsignada;
            document.getElementById('verificationSection').style.display = 'none';
            document.getElementById('employeeSection').style.display = 'block';
            document.getElementById('userInfo').style.display = 'block';
            hideFeedback();
            loadAndShowSedes();
        }
    }
    function loadAndShowSedes() {
        toggleLoading(true, 'Cargando sedes...');
        google.script.run
            .withSuccessHandler(populateSedesDropdown)
            .withFailureHandler(onFailure)
            .getSedesList();
    }
    function populateSedesDropdown(sedesList) {
        toggleLoading(false);
        const selector = document.getElementById('sedeSelector');
        selector.innerHTML = '<option value="">-- Selecciona una sede --</option>';
        if(sedesList && sedesList.length > 0) {
            sedesList.forEach(sede => {
                const option = document.createElement('option');
                option.value = sede;
                option.textContent = sede;
                selector.appendChild(option);
            });
            document.getElementById('sedeSelectionSection').style.display = 'block';
            document.getElementById('actionButtons').style.display = 'block';
        } else {
            showFeedback('error', 'Error de Configuración', 'No se pudo cargar la lista de sedes. Contacta a soporte.');
        }
    }
    async function startCamera() {
        try {
            const constraints = { video: { facingMode: 'user' } };
            stream = await navigator.mediaDevices.getUserMedia(constraints);
            video.srcObject = stream;
            document.getElementById('actionButtons').style.display = 'none';
            document.getElementById('sedeSelectionSection').style.display = 'none';
            document.getElementById('camera-container').style.display = 'flex';
            hideFeedback();
            showFeedback('info', 'Sonríe', 'Toma una foto para validar tu registro.');
        } catch (err) {
            showFeedback('error', 'Error de Cámara', 'No se pudo acceder a la cámara. Revisa los permisos del navegador.');
            toggleLoading(false);
        }
    }
    function stopCamera() {
        if (stream) {
            stream.getTracks().forEach(track => track.stop());
            stream = null;
        }
        document.getElementById('camera-container').style.display = 'none';
        document.getElementById('actionButtons').style.display = 'block';
        document.getElementById('sedeSelectionSection').style.display = 'block';
    }
    function handleAction(eventType) {
        hideFeedback();
        const selectedSede = document.getElementById('sedeSelector').value;
        if (!selectedSede) {
            showFeedback('warning', 'Acción Requerida', 'Por favor, selecciona la sede en la que te encuentras antes de marcar.');
            return;
        }
        currentEventType = eventType;
        startCamera();
    }
    function captureAndRegister() {
        const quality = 0.7;
        const maxWidth = 480;
        canvas.width = maxWidth;
        const scale = maxWidth / video.videoWidth;
        canvas.height = video.videoHeight * scale;
        const context = canvas.getContext('2d');
        context.drawImage(video, 0, 0, canvas.width, canvas.height);
        const imageData = canvas.toDataURL('image/jpeg', quality);
        stopCamera();
        processRegistration(currentEventType, imageData);
    }
    function processRegistration(eventType, imageData) {
        toggleLoading(true, 'Obteniendo ubicación...');
        navigator.geolocation.getCurrentPosition(
            (position) => {
                toggleLoading(true, 'Guardando registro...');
                const selectedSede = document.getElementById('sedeSelector').value;
                const logData = {
                    docId: currentEmployee.docId,
                    nombre: currentEmployee.nombre,
                    eventType: eventType,
                    latitude: position.coords.latitude,
                    longitude: position.coords.longitude,
                    imageData: imageData,
                    selectedSede: selectedSede
                };
                google.script.run
                    .withSuccessHandler(onLogSuccess)
                    .withFailureHandler(onFailure)
                    .recordLog(logData);
            },
            () => {
                toggleLoading(false);
                showFeedback('error', 'Ubicación denegada', 'No se pudo obtener tu ubicación. Activa los permisos e inténtalo de nuevo.');
            },
            { enableHighAccuracy: true, timeout: 10000, maximumAge: 0 }
        );
    }
    function onLogSuccess(response) {
        toggleLoading(false);
        if (map) { map.remove(); map = null; }
        document.getElementById('map-container').style.display = 'none';
        if (response.status === 'success') {
            const status = response.geofenceStatus;
            if (status.includes('Dentro')) {
                showFeedback('success', 'Registro Aprobado', 'Tu registro se guardó correctamente. ¡Estás en la ubicación correcta!');
            } else if (status.includes('Fuera')) {
                const distance = status.match(/\((\d+)m\)/) ? status.match(/\((\d+)m\)/)[1] : 'varios';
                showFeedback('warning', 'Registro con Novedad', `Se guardó tu registro, pero te encuentras a ${distance} metros de la sede.`);
            } else {
                showFeedback('info', 'Registro Guardado', 'No se pudo verificar la ubicación contra una sede. Tu registro ha sido guardado.');
            }
            if (response.sedeCoords && response.employeeCoords && response.sedeRadius) {
                document.getElementById('map-container').style.display = 'block';
                const sedePos = [response.sedeCoords.lat, response.sedeCoords.lng];
                const employeePos = [response.employeeCoords.lat, response.employeeCoords.lng];
                map = L.map('map').setView(sedePos, 16);
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '© OpenStreetMap'
                }).addTo(map);
                L.marker(sedePos).addTo(map).bindPopup('<b>Ubicación de la Sede Seleccionada</b>');
                L.marker(employeePos).addTo(map).bindPopup('<b>Tu ubicación de marcaje</b>');
                L.circle(sedePos, { 
                    color: getComputedStyle(document.documentElement).getPropertyValue('--color-accent-primary').trim(), 
                    fillColor: getComputedStyle(document.documentElement).getPropertyValue('--color-accent-primary').trim(), 
                    fillOpacity: 0.2, 
                    radius: response.sedeRadius 
                }).addTo(map);
                L.polyline([sedePos, employeePos], {
                    color: getComputedStyle(document.documentElement).getPropertyValue('--color-error-red').trim()
                }).addTo(map);
                map.fitBounds(L.latLngBounds([sedePos, employeePos]).pad(0.5));
            }
        } else {
            showFeedback('error', 'Error al Guardar', response.message);
        }
    }
    function onFailure(error) {
        toggleLoading(false);
        showFeedback('error', 'Error de Conexión', 'No se pudo comunicar con el servidor: ' + error.message);
    }
</script>

</body>
</html>
